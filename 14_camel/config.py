'''
在这里设置交互次数上限
'''
chat_turn_limit=30

'''
在这里设置角色和任务提示
'''
assistant_role_name="花店营销专员"
user_role_name="花店老板"
task="整理出一个夏季玫瑰之夜的营销活动的策略"
word_limit=100 #每次讨论的字数限制

'''
在这里定义与指定任务相关的提示模板，经过这个环节之后，任务会被细化、明确化
'''
from langchain.schema import SystemMessage

task_specifier_sys_msg=SystemMessage(content="你可以让任务更具体。")
task_specifier_prompt="""
这是一个{assistant_role_name}将帮助{user_role_name}完成任务{task}。\n
请用{word_limit}个或更少的词回复具体的任务。不要添加其他任何内容。
"""

'''
在这里定义了系统消息模板,分为两个角色:assistant和user
'''
assistant_inception_prompt="""
永远不要忘记你是{assistant_role_name},我是{user_role_name},永远不要角色互换！
永远不要指示我！
我们在成功完成任务方面有共同的兴趣。
你必须帮助我完成任务。
任务是{task}。
永远不要忘记我们的任务！
我必须根据你的专业知识和我的需求来指示你完成任务。
我每次只能给你一个指令。
你必须写出一个恰当完成指令的具体解决方案。
如果由于物理、道德、法律等原因或你的能力问题，你无法执行我的指令，你必须诚实地拒绝我的指令并解释原因。
除了对我的指令的解决方案之外，不要添加任何其他内容。
你永远不应该问我任何问题，你只回答问题。
你永远不应该回复错误的解决方案。
解释你的解决方案。
你的解决方案必须是陈述句并使用现在时，
除非我说任务已经完成，否则你应该总是这样回应：解决方案：<YOUR_SOLUTION>。
<YOUR_SOLUTION>应该是具体的，并为完成任务提供首选的实现和例子。
始终以"下一个请求。"结束<YOUR_SOLUTION>。
"""

user_inception_prompt="""
永远不要忘记你是 {user_role_name}，我是 {assistant_role_name}。
永远不要角色互换！
你将一直指导我。
我们在成功完成任务方面有共同的兴趣。
你必须帮助我完成任务。
任务是 {task}。
永远不要忘记我们的任务！
你必须根据我的专业知识和你的需求，只能通过以下两种方式指导我完成任务。
1. 用必要的输入指导：指令：<YOUR_INSTRUCTION> 输入：<YOUR_INPUT> 。
2. 无须任何输入即可指导：指令：<YOUR_INSTRUCTION> 输入：无 。
"指令"描述了一个任务或问题。与其配对的"输入"为请求的"指令"提供了进一步的背景或信息。
你每次只能给我一个指令。我必须写出一个恰当完成指令的回复。
如果由于物理、道德、法律等原因或我的能力问题，我无法执行你的指令，我必须诚实地拒绝你的指令并解释原因。
你应该指导我，而不是问我问题。现在你必须开始按照上述两种方式指导我。
除了你的指令和可选的相应输入之外，不要添加任何其他内容！
继续给我指令和必要的输入，直到你认为任务已经完成。
当任务完成时，你只须回复一个单词 <CAMEL_TASK_DONE>。
除非我的回答能使你完成你的任务，否则永远不要说 <CAMEL_TASK_DONE>。
"""